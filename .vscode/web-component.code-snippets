{
  "Web Component Snippet": {
    "scope": "javascript,typescript",
    "prefix": "webcomponent",
    "body": [
      "const ${1:CustomWebComponent}Template = document.createElement('template');",
      "${1:CustomWebComponent}Template.innerHTML = `",
      "\t<link href='/path-to-global-stylesheet.css' rel='stylesheet'>",
      "\t<style></style>",
      "\t<div class='${0:custom-web-component}'></div>",
      "`;",
      "",
      "class App${1:CustomWebComponent} extends HTMLElement {",
      "\tconstructor() {",
      "\t\tsuper();",
      "\t\t// element created",
      "\t\tthis.attachShadow({ mode: 'open' });",
      "\t\tthis.shadowRoot.appendChild(${1:CustomWebComponent}Template.content.cloneNode(true));",
      "\t}",
      "",
      "\tconnectedCallback() {",
      "\t\t// browser calls this method when the element is added to the document",
      "\t\t// (can be called many times if an element is repeatedly added/removed)",
      "\t}",
      "",
      "\tdisconnectedCallback() {",
      "\t\t// browser calls this method when the element is removed from the document",
      "\t\t// (can be called many times if an element is repeatedly added/removed)",
      "\t}",
      "",
      "\tstatic get observedAttributes() {",
      "\t\treturn [",
      "\t\t\t/* Attributes to observe. */",
      "\t\t];",
      "\t}",
      "",
      "\tattributeChangedCallback(name, oldValue, newValue) {",
      "\t\t// called when one of attributes listed above is modified",
      "\t}",
      "",
      "\tadoptedCallback() {",
      "\t\t// called when the element is moved to a new document",
      "\t\t// (happens in document.adoptNode, very rarely used)",
      "\t}",
      "",
      "\t// there can be other element methods and properties",
      "}",
      "",
      "customElements.define('app-${0:custom-web-component}', App${1:CustomWebComponent});"
    ],
    "description": "Generates a template code for Web Component along with registeration."
  }
}